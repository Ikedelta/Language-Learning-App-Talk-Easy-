rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if false; // Prevent user deletion through client

      // User's subcollections
      match /{subcollection}/{documentId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Quiz collection rules
    match /quizzes/{quizId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes through admin functions
    }

    // Quiz results collection rules
    match /quiz_results/{resultId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Results cannot be modified or deleted
    }

    // Grammar lessons collection rules
    match /grammar_lessons/{lessonId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only allow writes through admin functions
    }

    // Grammar progress collection rules
    match /grammar_progress/{progressId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Progress cannot be modified or deleted
    }

    // Chat rules
    match /chats/{chatId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Chats cannot be modified or deleted
    }
  }
} 